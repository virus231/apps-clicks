/* eslint-disable @typescript-eslint/no-misused-promises */
import React, { useState } from "react";

import { type ITitle } from "@/@types/title";
import Head from "next/head";
import { type Article } from "@prisma/client";
import Paper from '@mui/material/Paper';
import Divider from '@mui/material/Divider';
import { styled, Stack } from '@mui/system';
import { Box, Typography } from "@mui/material";
import Link from "next/link";
import { Loading } from "@/components/Loading";

const Item = styled(Paper)(({ theme }) => ({
  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',
  padding: theme.spacing(1),
  textAlign: 'center',
  width: "400px"
}));

const Home = () => {
  const [list, setListing] = useState<string[]>([]);
  const [loading, setLoading] = useState<boolean>(false);

  const fetchTitles = async () => {
    try {
      setLoading(true);
      const response = await fetch("http://localhost:3000/api/titles");
      const data = await response.json() as Article;

      console.log("data", data);

      setListing(data.originalTitle as unknown as string[])

      setLoading(false);
    } catch (error) {
      throw new Error("Something went wrong");
    }
  };


  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <Stack
          direction="row"
          divider={<Divider orientation="vertical" flexItem />}
          spacing={2}
        >
          <Item>
            <Typography variant="h5">
              Titles from <br/>
              <Link href="https://www.gamespot.com/">
                https://www.gamespot.com/
              </Link>
            </Typography>
            {!loading ? (
              list.map((title, index) => (
                <h1 key={index} className="text-black">
                  {index + 1}. {title}
                </h1>
              ))
            ) : <Loading/>}

          </Item>
          <Item>
            <Typography variant="h5">
              Regenerate titles - ChatGPT
            </Typography>

          </Item>
          <Item>Item 3</Item>
        </Stack>
        <Box className="mt-5">
          <button
            onClick={() => fetchTitles()}
            className="mb-2 h-10 rounded-full border border-slate-200 px-6 font-semibold text-slate-100"
            type="button"
            disabled={list.length > 0}
          >
            Get Titles
          </button>
        </Box>


      </main>
    </>
  );
};

export default Home;
