import React, { useEffect, useState } from "react";
import Head from "next/head";
import { type Article } from "@prisma/client";
import Paper from '@mui/material/Paper';
import Divider from '@mui/material/Divider';
import { styled, Stack } from '@mui/system';
import { Typography } from "@mui/material";
import Link from "next/link";
import { Loading } from "@/components/Loading";


const Item = styled(Paper)(({ theme }) => ({
  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',
  padding: theme.spacing(1),
  textAlign: 'center',
  width: "400px"
}));

const Home = () => {
  const [originalTitles, setOriginalTitles] = useState<Pick<Article, "originalTitle" | "id">[]>([]);
  const [regenerateTitles, setRegenerateTitles] = useState<Pick<Article, "regenerateTitle" | "id">[]>([]);
  const [loading, setLoading] = useState<boolean>(false);

  const fetchOriginalTitles = async () => {
    try {
      setLoading(true);
      const response = await fetch("/api/original-titles");
      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
      const { data } = await response.json();

      setOriginalTitles(data as Pick<Article, "originalTitle" | "id">[]);

      setLoading(false);
    } catch (error) {
      throw new Error("Something went wrong");
    }
  };

  const fetchRegenerateTitles = async () => {
    try {
      setLoading(true)
      const response = await fetch("/api/regenerate-titles");
      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
      const { data } = await response.json();

      setRegenerateTitles(data as Pick<Article, "regenerateTitle" | "id">[]);

      setLoading(false);
    } catch (e) {
      throw new Error("Something went wrong");
    }
  }

  useEffect(() => {
    void fetchOriginalTitles();
    void fetchRegenerateTitles();
  }, [])


  return (
    <>
      <Head>
        <title>Articles</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <Stack
          direction="row"
          divider={<Divider orientation="vertical" flexItem />}
          spacing={2}
        >
          <Item>
            <Typography variant="h5">
              Titles from <br/>
              <Link href="https://www.gamespot.com/">
                https://www.gamespot.com/
              </Link>
            </Typography>
            {!loading || originalTitles.length > 0 ? (
              originalTitles.map((title, index) => (
                <h1 key={title.id} className="text-black">
                  {index + 1}. {title.originalTitle}
                </h1>
              ))
            ) : <Loading/>}

          </Item>
          <Item>
            <Typography variant="h5">
              Regenerate titles - ChatGPT
            </Typography>
            {!loading || regenerateTitles.length > 0 ? (
              regenerateTitles.map((title) => (
                <Typography key={title.id} variant="body1" className="hover:divide-cyan-900">
                  <Link key={title.id} className="text-black " href={`/article/${title.id}`}>
                    {title.regenerateTitle}
                  </Link>
                </Typography>
              ))
            ) : <Loading/>}
          </Item>
        </Stack>
        <Stack direction="row" spacing={2} className="mt-5" >
          <button
            onClick={void fetchOriginalTitles}
            className="mb-2 h-10 rounded-full border border-slate-200 px-6 font-semibold text-slate-100"
            type="button"
          >
            Get Original Titles
          </button>
          <button
            onClick={void fetchRegenerateTitles}
            className="mb-2 h-10 rounded-full border border-slate-200 px-6 font-semibold text-slate-100"
            type="button"
          >
            Get Regenerate Titles
          </button>
          {/*<button*/}
          {/*  onClick={fetchArticles}*/}
          {/*  className="mb-2 h-10 rounded-full border border-slate-200 px-6 font-semibold text-slate-100"*/}
          {/*  type="button"*/}
          {/*>*/}
          {/*  Get Articles*/}
          {/*</button>*/}
        </Stack>


      </main>
    </>
  );
};

export default Home;
